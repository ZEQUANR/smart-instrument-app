{"version":3,"file":"useCountDown.js","sources":["uni_modules/wot-design-uni/components/composables/useCountDown.ts"],"sourcesContent":["import { ref, computed, onBeforeUnmount } from 'vue'\nimport { isDef } from '../common/util'\nimport { useRaf } from './useRaf'\n\n// 定义倒计时时间的数据结构\nexport type CurrentTime = {\n  days: number\n  hours: number\n  total: number\n  minutes: number\n  seconds: number\n  milliseconds: number\n}\n\n// 定义倒计时的配置项\nexport type UseCountDownOptions = {\n  time: number // 倒计时总时间，单位为毫秒\n  millisecond?: boolean // 是否开启毫秒级倒计时，默认为 false\n  onChange?: (current: CurrentTime) => void // 倒计时每次变化时的回调函数\n  onFinish?: () => void // 倒计时结束时的回调函数\n}\n\n// 定义常量\nconst SECOND = 1000\nconst MINUTE = 60 * SECOND\nconst HOUR = 60 * MINUTE\nconst DAY = 24 * HOUR\n\n// 将时间转换为倒计时数据结构\nfunction parseTime(time: number): CurrentTime {\n  const days = Math.floor(time / DAY)\n  const hours = Math.floor((time % DAY) / HOUR)\n  const minutes = Math.floor((time % HOUR) / MINUTE)\n  const seconds = Math.floor((time % MINUTE) / SECOND)\n  const milliseconds = Math.floor(time % SECOND)\n\n  return {\n    total: time,\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds\n  }\n}\n\n// 判断两个时间是否在同一秒内\nfunction isSameSecond(time1: number, time2: number): boolean {\n  return Math.floor(time1 / 1000) === Math.floor(time2 / 1000)\n}\n\n// 定义 useCountDown 函数\nexport function useCountDown(options: UseCountDownOptions) {\n  let endTime: number // 结束时间\n  let counting: boolean // 是否计时中\n\n  const { start: startRaf, cancel: cancelRaf } = useRaf(tick)\n\n  const remain = ref(options.time) // 剩余时间\n  const current = computed(() => parseTime(remain.value)) // 当前倒计时数据\n\n  // 暂停倒计时\n  const pause = () => {\n    counting = false\n    cancelRaf()\n  }\n\n  // 获取当前剩余时间\n  const getCurrentRemain = () => Math.max(endTime - Date.now(), 0)\n\n  // 设置剩余时间\n  const setRemain = (value: number) => {\n    remain.value = value\n    isDef(options.onChange) && options.onChange(current.value)\n    if (value === 0) {\n      pause()\n      isDef(options.onFinish) && options.onFinish()\n    }\n  }\n\n  // 每毫秒更新一次倒计时\n  const microTick = () => {\n    if (counting) {\n      setRemain(getCurrentRemain())\n      if (remain.value > 0) {\n        startRaf()\n      }\n    }\n  }\n\n  // 每秒更新一次倒计时\n  const macroTick = () => {\n    if (counting) {\n      const remainRemain = getCurrentRemain()\n      if (!isSameSecond(remainRemain, remain.value) || remainRemain === 0) {\n        setRemain(remainRemain)\n      }\n\n      if (remain.value > 0) {\n        startRaf()\n      }\n    }\n  }\n\n  // 根据配置项选择更新方式\n  function tick() {\n    if (options.millisecond) {\n      microTick()\n    } else {\n      macroTick()\n    }\n  }\n\n  // 开始倒计时\n  const start = () => {\n    if (!counting) {\n      endTime = Date.now() + remain.value\n      counting = true\n      startRaf()\n    }\n  }\n\n  // 重置倒计时\n  const reset = (totalTime: number = options.time) => {\n    pause()\n    remain.value = totalTime\n  }\n\n  // 在组件卸载前暂停倒计时\n  onBeforeUnmount(pause)\n\n  return {\n    start,\n    pause,\n    reset,\n    current\n  }\n}\n"],"names":["useRaf","ref","computed","isDef","onBeforeUnmount"],"mappings":";;;;AAuBA,MAAM,SAAS;AACf,MAAM,SAAS,KAAK;AACpB,MAAM,OAAO,KAAK;AAClB,MAAM,MAAM,KAAK;AAGjB,SAAS,UAAU,MAA2B;AAC5C,QAAM,OAAO,KAAK,MAAM,OAAO,GAAG;AAClC,QAAM,QAAQ,KAAK,MAAO,OAAO,MAAO,IAAI;AAC5C,QAAM,UAAU,KAAK,MAAO,OAAO,OAAQ,MAAM;AACjD,QAAM,UAAU,KAAK,MAAO,OAAO,SAAU,MAAM;AACnD,QAAM,eAAe,KAAK,MAAM,OAAO,MAAM;AAEtC,SAAA;AAAA,IACL,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;AAGA,SAAS,aAAa,OAAe,OAAwB;AACpD,SAAA,KAAK,MAAM,QAAQ,GAAI,MAAM,KAAK,MAAM,QAAQ,GAAI;AAC7D;AAGO,SAAS,aAAa,SAA8B;AACrD,MAAA;AACA,MAAA;AAEJ,QAAM,EAAE,OAAO,UAAU,QAAQ,cAAcA,uDAAAA,OAAO,IAAI;AAEpD,QAAA,SAASC,cAAAA,IAAI,QAAQ,IAAI;AAC/B,QAAM,UAAUC,cAAAA,SAAS,MAAM,UAAU,OAAO,KAAK,CAAC;AAGtD,QAAM,QAAQ,MAAM;AACP,eAAA;AACD;EAAA;AAIN,QAAA,mBAAmB,MAAM,KAAK,IAAI,UAAU,KAAK,OAAO,CAAC;AAGzD,QAAA,YAAY,CAAC,UAAkB;AACnC,WAAO,QAAQ;AACfC,oDAAA,MAAM,QAAQ,QAAQ,KAAK,QAAQ,SAAS,QAAQ,KAAK;AACzD,QAAI,UAAU,GAAG;AACT;AACNA,sDAAAA,MAAM,QAAQ,QAAQ,KAAK,QAAQ,SAAS;AAAA,IAC9C;AAAA,EAAA;AAIF,QAAM,YAAY,MAAM;AACtB,QAAI,UAAU;AACZ,gBAAU,kBAAkB;AACxB,UAAA,OAAO,QAAQ,GAAG;AACX;MACX;AAAA,IACF;AAAA,EAAA;AAIF,QAAM,YAAY,MAAM;AACtB,QAAI,UAAU;AACZ,YAAM,eAAe;AACrB,UAAI,CAAC,aAAa,cAAc,OAAO,KAAK,KAAK,iBAAiB,GAAG;AACnE,kBAAU,YAAY;AAAA,MACxB;AAEI,UAAA,OAAO,QAAQ,GAAG;AACX;MACX;AAAA,IACF;AAAA,EAAA;AAIF,WAAS,OAAO;AACd,QAAI,QAAQ,aAAa;AACb;IAAA,OACL;AACK;IACZ;AAAA,EACF;AAGA,QAAM,QAAQ,MAAM;AAClB,QAAI,CAAC,UAAU;AACH,gBAAA,KAAK,QAAQ,OAAO;AACnB,iBAAA;AACF;IACX;AAAA,EAAA;AAIF,QAAM,QAAQ,CAAC,YAAoB,QAAQ,SAAS;AAC5C;AACN,WAAO,QAAQ;AAAA,EAAA;AAIjBC,gBAAA,gBAAgB,KAAK;AAEd,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}